[tox]
envlist = py39, py310, py311, py312, lint, type, docs
skip_missing_interpreters = true

[testenv]
deps =
    -e facet[dev]
commands =
    pytest tests/ -v --cov=facet --cov-report=xml --cov-report=term-missing

[testenv:lint]
deps =
    flake8
    black
    isort
commands =
    flake8 facet/
    black --check --diff facet/
    isort --check-only --diff facet/

[testenv:type]
deps =
    mypy
    types-all
commands =
    mypy facet/

[testenv:format]
deps =
    black
    isort
commands =
    black facet/
    isort facet/

[testenv:docs]
deps =
    -e facet[docs]
commands =
    mkdocs build --clean

[testenv:serve-docs]
deps =
    -e facet[docs]
commands =
    mkdocs serve

[testenv:publish-docs]
deps =
    -e facet[docs]
    mike
commands =
    mike deploy --push --update-aliases {posargs:1.0 latest}

[testenv:build]
deps =
    build
    twine
commands =
    python -m build facet/
    twine check facet/dist/*

[testenv:clean]
commands =
    find . -type d -name "__pycache__" -exec rm -rf {} +
    find . -type f -name "*.pyc" -delete
    find . -type f -name "*.pyo" -delete
    find . -type f -name "*.pyd" -delete
    find . -type f -name ".coverage" -delete
    find . -type d -name "*.egg-info" -exec rm -rf {} +
    find . -type d -name ".pytest_cache" -exec rm -rf {} +
    find . -type d -name ".tox" -exec rm -rf {} +
    rm -rf facet/dist/
    rm -rf facet/build/
    rm -rf htmlcov/
    rm -f coverage.xml

[flake8]
max-line-length = 100
extend-ignore = E203, W503
exclude =
    .git,
    __pycache__,
    .pytest_cache,
    .tox,
    build,
    dist,
    *.egg-info,
    .venv,
    venv

[coverage:run]
source = facet
omit =
    */tests/*
    */test_*.py
    setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\\bProtocol\\):
    @(abc\\.)?abstractmethod
